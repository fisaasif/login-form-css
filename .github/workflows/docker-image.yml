name: Deploy to AWS ECR

on:
  push:
    branches: main

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: |
          ~/.docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: asiftest01
        IMAGE_TAG: login_demo_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  scan-image:
    name: Scan Docker Image for Vulnerabilities
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.19.1/trivy_0.19.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.19.1_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/trivy

      - name: Scan Docker image with Trivy
        run: trivy ${{ needs.build-and-push.outputs.registry }}/asiftest01:login_demo_image
